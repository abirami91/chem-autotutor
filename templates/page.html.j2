<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>{{ title }} · Chem-Autotutor</title>
  <meta name="description" content="Interactive 3D view and quick facts for {{ title }}." />
  <meta property="og:title" content="{{ title }} · Chem-Autotutor" />
  <meta property="og:description" content="Formula {{ formula }} · Exact mass {{ mw }} u" />
  <style>
    :root{
      --bg:#0b1220; --panel:#111a2e; --muted:#9db4d1; --txt:#e8f1ff; --accent:#6bd6ff; --line:#1b2742;
      --card:#0f172a; --btn:#13213c; --btnhl:#1a2e56;
    }
    *{box-sizing:border-box}
    html,body{height:100%}
    body{
      margin:0; background:linear-gradient(180deg,var(--bg),#050a16 60%);
      color:var(--txt); font:16px/1.45 system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,"Helvetica Neue",Arial;
    }
    .wrap{max-width:1200px; margin:0 auto; padding:28px 20px 40px}
    header{display:flex; gap:18px; align-items:center; flex-wrap:wrap; margin-bottom:14px}
    .title{font-size:28px; font-weight:700; letter-spacing:.2px}
    .badge{display:inline-flex; align-items:center; gap:8px; font-size:13px; color:var(--muted);}
    .factbar{display:flex; flex-wrap:wrap; gap:10px; margin:8px 0 18px}
    .chip{background:var(--panel); border:1px solid var(--line); padding:8px 12px; border-radius:10px; color:#cfe6ff; font-size:14px}
    .grid{display:grid; grid-template-columns: 360px 1fr; gap:18px}
    @media (max-width:980px){ .grid{grid-template-columns:1fr} }

    .card{background:var(--card); border:1px solid var(--line); border-radius:14px; padding:14px}
    .card h3{margin:0 0 10px; font-size:16px; color:#a9c7ff; letter-spacing:.3px}
    .notes{min-height:180px}
    .notes ul{margin:8px 0 0 18px; padding:0}
    .notes li{margin:6px 0; color:#d6e6ff}
    .viewer{position:relative; height:520px; border-radius:14px; overflow:hidden; border:1px solid var(--line); background:#000}
    .toolbar{display:flex; gap:8px; flex-wrap:wrap; margin-top:12px}
    button{
      background:var(--btn); color:#d8e7ff; border:1px solid var(--line); border-radius:10px;
      padding:8px 12px; cursor:pointer; font-weight:600; letter-spacing:.2px
    }
    button:hover{background:var(--btnhl)}
    .small{font-size:13px; color:var(--muted)}
    a.dl{color:#9fe0ff; text-decoration:none}
    .code{font-family:ui-monospace,SFMono-Regular,Menlo,Consolas,monospace; font-size:13px; color:#cfe6ff}
    footer{margin-top:22px; color:var(--muted); font-size:13px}

    /* fade animation for labels */
    .label3D {
      transition: opacity 0.6s ease-in-out;
    }
  </style>
  <script src="https://3Dmol.org/build/3Dmol-min.js"></script>
</head>
<body>
  <div class="wrap">
    <header>
      <div class="title">{{ title }}</div>
      <span class="badge">Chem-Autotutor</span>
    </header>

    <div class="factbar">
      <div class="chip"><strong>Formula</strong> {{ formula }}</div>
      <div class="chip"><strong>Exact mass</strong> {{ mw }} u</div>
      {% if smiles and smiles != "(none)" %}
      <div class="chip"><strong>SMILES</strong> <span class="code">{{ smiles }}</span></div>
      {% endif %}
    </div>

    <div class="grid">
      <aside class="card notes">
        <h3>Teaching notes</h3>
        {% if bullets and bullets|length>0 %}
          <ul>
            {% for b in bullets %}
              <li>{{ b }}</li>
            {% endfor %}
          </ul>
        {% else %}
          <p class="small">Provide an IUPAC name to auto-extract hints (chain length, -en, -yn, substituents).</p>
        {% endif %}
        <hr style="border-color:var(--line); border-width:1px; margin:14px 0">
        <p class="small">Tips: drag to rotate • scroll to zoom • shift+drag to pan.</p>
      </aside>

      <main>
        <div id="viewer" class="viewer"></div>
        <div class="toolbar">
          <button id="btnStick">Stick</button>
          <button id="btnBall">Ball&amp;Stick</button>
          <button id="btnLine">Line</button>
          <button id="btnSpacefill">Spacefill</button>
          <button id="btnSpin">Spin</button>
          <button id="btnBg">Toggle BG</button>
          <button id="btnLabels">Toggle Labels</button>
          <button id="btnReset">Reset</button>
          <button id="btnShot">Screenshot</button>
          <a id="dlSdf" class="dl" download="model.sdf">Download SDF</a>
          <a id="dlPng" class="dl" download="structure.png">Download 2D</a>
        </div>
      </main>
    </div>

    <footer>
      Generated with Chem-Autotutor · {{ title }}
    </footer>
  </div>

<script>
  // --- data injected by Jinja ---
  const sdf = `{{ sdf | replace("`","\\`") }}`;
  const hasSDF = sdf && sdf.trim().length>0;

  // --- viewer setup ---
  let bgDark = true, spinning = false, labelsVisible = false;
  const viewer = $3Dmol.createViewer("viewer", {backgroundColor: bgDark ? 'black':'white'});

  function render(style){
    viewer.setStyle({}, style);
    viewer.zoomTo(); viewer.render();
  }

  if(hasSDF){
    viewer.addModel(sdf, "sdf");
    render({stick:{radius:0.22, colorscheme:"element"}});
  }else{
    viewer.addLabel("No unique 3D for a raw formula.\nProvide SMILES or IUPAC name.",
      {backgroundColor:'rgba(0,0,0,0.6)',fontColor:'white',fontSize:16,backgroundOpacity:0.6,alignment:"center"});
    viewer.zoomTo(); viewer.render();
  }

  // --- atom labels ---
  function showLabels(){
    viewer.removeAllLabels();
    viewer.getModel().atoms.forEach(atom=>{
      viewer.addLabel(atom.elem, {
        position: atom,
        fontSize: 12,
        fontColor: bgDark ? "white" : "black",
        backgroundColor: bgDark ? "rgba(0,0,0,0.3)" : "rgba(255,255,255,0.5)",
        showBackground: true,
        backgroundOpacity: 0.6,
        alignment: "center",
        inFront: true,
        font: "Helvetica, Arial, sans-serif"
      });
    });
    viewer.render();
  }

  function toggleLabels(){
    labelsVisible = !labelsVisible;
    viewer.removeAllLabels();
    if(labelsVisible) showLabels();
  }

  // --- controls ---
  document.getElementById('btnStick').onclick = ()=>render({stick:{radius:0.22, colorscheme:"element"}});
  document.getElementById('btnBall').onclick  = ()=>render({stick:{radius:0.2, colorscheme:"element"}, sphere:{scale:0.25}});
  document.getElementById('btnLine').onclick  = ()=>render({line:{}});
  document.getElementById('btnSpacefill').onclick=()=>render({sphere:{scale:0.38}});

  document.getElementById('btnSpin').onclick = ()=>{
    spinning = !spinning;
    viewer.spin(spinning);
  };
  document.getElementById('btnBg').onclick = ()=>{
    bgDark = !bgDark;
    viewer.setBackgroundColor(bgDark ? 'black' : 'white');
    if(labelsVisible) showLabels(); // refresh label colors
    viewer.render();
  };
  document.getElementById('btnLabels').onclick = toggleLabels;
  document.getElementById('btnReset').onclick = ()=>{ viewer.zoomTo(); viewer.render(); };

  document.getElementById('btnShot').onclick = ()=>{
    const uri = viewer.pngURI();
    const a = document.createElement('a');
    a.href = uri; a.download = "{{ title | replace(' ','_') }}.png"; a.click();
  };

  // downloads (served from same folder)
  document.getElementById('dlSdf').href = "model.sdf";
  document.getElementById('dlPng').href = "structure.png";
</script>
</body>
</html>
